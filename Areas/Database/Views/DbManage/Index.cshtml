@using Microsoft.EntityFrameworkCore
@using System.Data
@using App.Models.AppDbContext

@inject AppDbContext dbContext

@{
    ViewData["Title"] = "Thong tin Db";
    var connect  = dbContext.Database.GetDbConnection();
    var dbname = connect.Database;
    var can_connect = dbContext.Database.CanConnect();
    @* dbContext.Database.GetAppliedMigrations(); *@
}
<partial name="_AlertMessage"></partial>
<h1>Thong tin</h1>
<p>- Database: @dbname</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>
<hr>
<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p>
}
@foreach (var migration in dbContext.Database.GetPendingMigrations())

{
    <p>@migration</p>
}
@if(dbContext.Database.GetPendingMigrations().Any()){
    <form method="post">
        <button class="btn btn-success" asp-action="Migrate"> Tao db (cap Nhap Migration) </button>
    </form>
}
@if(!can_connect){
    <p class="alert alert-danger">Khong co kha nang ket noi voi Database</p>
}
@if(can_connect)
{
    <h2>Cac table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        
    @foreach (System.Data.DataRow row in table.Rows){
        <li>@row["TABLE_NAME"]</li>
    }
    </ul>

    <a class="btn btn-danger" asp-action="DeleteDb">xoa database: @dbname</a>
}
